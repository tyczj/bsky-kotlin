[versions]
agp = "8.7.2"
kotlin = "2.0.0"
compose = "1.7.5"
compose-material3 = "1.3.1"
androidx-activityCompose = "1.9.3"
ktor = "3.0.1"
coroutines = "1.9.0"
kotlin-serialization-plugin = "2.0.20"
kotlin-serialization = "1.7.3"
nexus-plugin = "2.0.0"

[libraries]
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }
compose-ui = { module = "androidx.compose.ui:ui", version.ref = "compose" }
compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose" }
compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "compose" }
compose-foundation = { module = "androidx.compose.foundation:foundation", version.ref = "compose" }
compose-material3 = { module = "androidx.compose.material3:material3", version.ref = "compose-material3" }
ktor-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor"}
ktor-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor"}
ktor-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor"}
ktor-json = { module = "io.ktor:ktor-client-json", version.ref = "ktor"}
ktor-serialization = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor"}
ktor-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor"}
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }
kotlinx-serialization = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlin-serialization" }

[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
kotlinAndroid = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlinCocoapods = { id = "org.jetbrains.kotlin.native.cocoapods", version.ref = "kotlin" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
kotlinSerialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin-serialization-plugin" }
nexus = { id = "io.github.gradle-nexus.publish-plugin", version.ref = "nexus-plugin" }
mavenPublish = { id = "maven-publish" }
signing = { id = "signing" }
